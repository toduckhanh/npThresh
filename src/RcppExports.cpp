// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cdf_kernel_C
NumericVector cdf_kernel_C(NumericVector x, NumericVector X, int Ktype, double bwd);
RcppExport SEXP _npThresh_cdf_kernel_C(SEXP xSEXP, SEXP XSEXP, SEXP KtypeSEXP, SEXP bwdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type Ktype(KtypeSEXP);
    Rcpp::traits::input_parameter< double >::type bwd(bwdSEXP);
    rcpp_result_gen = Rcpp::wrap(cdf_kernel_C(x, X, Ktype, bwd));
    return rcpp_result_gen;
END_RCPP
}
// cdf_loocv_kernel_C
double cdf_loocv_kernel_C(NumericVector x, NumericVector X, int Ktype, double bwd, double hx);
RcppExport SEXP _npThresh_cdf_loocv_kernel_C(SEXP xSEXP, SEXP XSEXP, SEXP KtypeSEXP, SEXP bwdSEXP, SEXP hxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type Ktype(KtypeSEXP);
    Rcpp::traits::input_parameter< double >::type bwd(bwdSEXP);
    Rcpp::traits::input_parameter< double >::type hx(hxSEXP);
    rcpp_result_gen = Rcpp::wrap(cdf_loocv_kernel_C(x, X, Ktype, bwd, hx));
    return rcpp_result_gen;
END_RCPP
}
// cv_bwd_C
List cv_bwd_C(NumericVector x, NumericVector X, int Ktype, double hx, NumericVector bwd_seq);
RcppExport SEXP _npThresh_cv_bwd_C(SEXP xSEXP, SEXP XSEXP, SEXP KtypeSEXP, SEXP hxSEXP, SEXP bwd_seqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type Ktype(KtypeSEXP);
    Rcpp::traits::input_parameter< double >::type hx(hxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bwd_seq(bwd_seqSEXP);
    rcpp_result_gen = Rcpp::wrap(cv_bwd_C(x, X, Ktype, hx, bwd_seq));
    return rcpp_result_gen;
END_RCPP
}
// PCO_bwd_C
List PCO_bwd_C(NumericVector X, int Ktype, NumericVector bwd_seq);
RcppExport SEXP _npThresh_PCO_bwd_C(SEXP XSEXP, SEXP KtypeSEXP, SEXP bwd_seqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type Ktype(KtypeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bwd_seq(bwd_seqSEXP);
    rcpp_result_gen = Rcpp::wrap(PCO_bwd_C(X, Ktype, bwd_seq));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_npThresh_cdf_kernel_C", (DL_FUNC) &_npThresh_cdf_kernel_C, 4},
    {"_npThresh_cdf_loocv_kernel_C", (DL_FUNC) &_npThresh_cdf_loocv_kernel_C, 5},
    {"_npThresh_cv_bwd_C", (DL_FUNC) &_npThresh_cv_bwd_C, 5},
    {"_npThresh_PCO_bwd_C", (DL_FUNC) &_npThresh_PCO_bwd_C, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_npThresh(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
